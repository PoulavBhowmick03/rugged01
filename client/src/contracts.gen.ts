// Generated by dojo-bindgen on Thu, 22 Aug 2024 20:04:33 +0000. Do not modify this file manually.
import { DojoProvider } from "@dojoengine/core";
import { Account } from "starknet";

// export type IClient = Awaited<ReturnType<typeof client>>;

export function client(provider: DojoProvider) {

    // System definitions for `rugged` contract
    function rugged() {
        const contractName = "rugged";

        // Call the `initialize_platform_fees` system
        const initializePlatformFees = async (props: { account: Account; feePercentage: number }) => {
            try {
                return await provider.execute(
                    props.account,
                    {
                        contractName: contractName,
                        entrypoint: "initialize_platform_fees",
                        calldata: [props.feePercentage.toString()],
                    },
                    "dojo_starter-rugged"
                );
            } catch (error) {
                console.error("Error executing initialize_platform_fees:", error);
                throw error;
            }
        };

        // Helper function to split u128 into two felts (lower and higher 64 bits)
        const splitU128 = (value: bigint): [string, string] => {
            const lower = value & BigInt("0xFFFFFFFFFFFFFFFF");
            const higher = value >> BigInt(64);
            return [lower.toString(), higher.toString()];
        };

        // Call the `play_game` system
        const playGame = async (props: { account: Account; betAmount: bigint }) => {
            try {
                const [lower, higher] = splitU128(props.betAmount);
                return await provider.execute(
                    props.account,
                    {
                        contractName: contractName,
                        entrypoint: "play_game",
                        calldata: [lower, higher],
                    },
                    "dojo_starter-rugged"
                );
            } catch (error) {
                console.error("Error executing play_game:", error);
                throw error;
            }
        };

        return {
            initializePlatformFees,
            playGame,
        };
    }

    return {
        rugged: rugged(),
    };
}
